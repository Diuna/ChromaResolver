// <auto-generated />
using System;
using ChromaResolver.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ChromaResolver.Migrations
{
    [DbContext(typeof(SampleContext))]
    [Migration("20241020102112_Stems")]
    partial class Stems
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.4");

            modelBuilder.Entity("ChromaResolver.Models.ECM.BaseElement", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("guid");

                    b.Property<int>("Element")
                        .HasColumnType("INTEGER");

                    b.Property<double>("IcpValue")
                        .HasColumnType("REAL");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Value")
                        .HasColumnType("REAL");

                    b.HasKey("Guid");

                    b.ToTable("ECMBase");
                });

            modelBuilder.Entity("ChromaResolver.Models.ECM.Sample", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("AboveHeight")
                        .HasColumnType("REAL");

                    b.Property<string>("AdditionalInfo")
                        .HasColumnType("TEXT");

                    b.Property<int>("Ah")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("CrElementId")
                        .HasColumnType("TEXT")
                        .HasColumnName("Cr");

                    b.Property<Guid>("CrGuid")
                        .HasColumnType("TEXT");

                    b.Property<string>("Creator")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CuElementId")
                        .HasColumnType("TEXT")
                        .HasColumnName("Cu");

                    b.Property<Guid>("CuGuid")
                        .HasColumnType("TEXT");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("FeElementId")
                        .HasColumnType("TEXT")
                        .HasColumnName("Fe");

                    b.Property<Guid>("FeGuid")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("Guid")
                        .HasColumnType("TEXT")
                        .HasColumnName("guid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("NiElementId")
                        .HasColumnType("TEXT")
                        .HasColumnName("Ni");

                    b.Property<Guid>("NiGuid")
                        .HasColumnType("TEXT");

                    b.Property<double>("Stem1")
                        .HasColumnType("REAL");

                    b.Property<double>("Stem2")
                        .HasColumnType("REAL");

                    b.Property<double>("Stem3")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("CrGuid");

                    b.HasIndex("CuGuid");

                    b.HasIndex("FeGuid");

                    b.HasIndex("NiGuid");

                    b.ToTable("ECM");
                });

            modelBuilder.Entity("ChromaResolver.Models.ECM.Sample", b =>
                {
                    b.HasOne("ChromaResolver.Models.ECM.BaseElement", "Cr")
                        .WithMany()
                        .HasForeignKey("CrGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ChromaResolver.Models.ECM.BaseElement", "Cu")
                        .WithMany()
                        .HasForeignKey("CuGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ChromaResolver.Models.ECM.BaseElement", "Fe")
                        .WithMany()
                        .HasForeignKey("FeGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ChromaResolver.Models.ECM.BaseElement", "Ni")
                        .WithMany()
                        .HasForeignKey("NiGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cr");

                    b.Navigation("Cu");

                    b.Navigation("Fe");

                    b.Navigation("Ni");
                });
#pragma warning restore 612, 618
        }
    }
}
